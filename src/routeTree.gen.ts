/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as InitChatbotImport } from './routes/init-chatbot'
import { Route as AppImport } from './routes/_app'
import { Route as AppIndexImport } from './routes/_app/index'
import { Route as AppPromptingImport } from './routes/_app/prompting'
import { Route as AppDataSourcesImport } from './routes/_app/data-sources'
import { Route as AppConfigurationImport } from './routes/_app/configuration'
import { Route as AppChatsImport } from './routes/_app/chats'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const InitChatbotRoute = InitChatbotImport.update({
  id: '/init-chatbot',
  path: '/init-chatbot',
  getParentRoute: () => rootRoute,
} as any)

const AppRoute = AppImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const AppIndexRoute = AppIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRoute,
} as any)

const AppPromptingRoute = AppPromptingImport.update({
  id: '/prompting',
  path: '/prompting',
  getParentRoute: () => AppRoute,
} as any)

const AppDataSourcesRoute = AppDataSourcesImport.update({
  id: '/data-sources',
  path: '/data-sources',
  getParentRoute: () => AppRoute,
} as any)

const AppConfigurationRoute = AppConfigurationImport.update({
  id: '/configuration',
  path: '/configuration',
  getParentRoute: () => AppRoute,
} as any)

const AppChatsRoute = AppChatsImport.update({
  id: '/chats',
  path: '/chats',
  getParentRoute: () => AppRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/init-chatbot': {
      id: '/init-chatbot'
      path: '/init-chatbot'
      fullPath: '/init-chatbot'
      preLoaderRoute: typeof InitChatbotImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_app/chats': {
      id: '/_app/chats'
      path: '/chats'
      fullPath: '/chats'
      preLoaderRoute: typeof AppChatsImport
      parentRoute: typeof AppImport
    }
    '/_app/configuration': {
      id: '/_app/configuration'
      path: '/configuration'
      fullPath: '/configuration'
      preLoaderRoute: typeof AppConfigurationImport
      parentRoute: typeof AppImport
    }
    '/_app/data-sources': {
      id: '/_app/data-sources'
      path: '/data-sources'
      fullPath: '/data-sources'
      preLoaderRoute: typeof AppDataSourcesImport
      parentRoute: typeof AppImport
    }
    '/_app/prompting': {
      id: '/_app/prompting'
      path: '/prompting'
      fullPath: '/prompting'
      preLoaderRoute: typeof AppPromptingImport
      parentRoute: typeof AppImport
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexImport
      parentRoute: typeof AppImport
    }
  }
}

// Create and export the route tree

interface AppRouteChildren {
  AppChatsRoute: typeof AppChatsRoute
  AppConfigurationRoute: typeof AppConfigurationRoute
  AppDataSourcesRoute: typeof AppDataSourcesRoute
  AppPromptingRoute: typeof AppPromptingRoute
  AppIndexRoute: typeof AppIndexRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppChatsRoute: AppChatsRoute,
  AppConfigurationRoute: AppConfigurationRoute,
  AppDataSourcesRoute: AppDataSourcesRoute,
  AppPromptingRoute: AppPromptingRoute,
  AppIndexRoute: AppIndexRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AppRouteWithChildren
  '/init-chatbot': typeof InitChatbotRoute
  '/login': typeof LoginRoute
  '/chats': typeof AppChatsRoute
  '/configuration': typeof AppConfigurationRoute
  '/data-sources': typeof AppDataSourcesRoute
  '/prompting': typeof AppPromptingRoute
  '/': typeof AppIndexRoute
}

export interface FileRoutesByTo {
  '/init-chatbot': typeof InitChatbotRoute
  '/login': typeof LoginRoute
  '/chats': typeof AppChatsRoute
  '/configuration': typeof AppConfigurationRoute
  '/data-sources': typeof AppDataSourcesRoute
  '/prompting': typeof AppPromptingRoute
  '/': typeof AppIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_app': typeof AppRouteWithChildren
  '/init-chatbot': typeof InitChatbotRoute
  '/login': typeof LoginRoute
  '/_app/chats': typeof AppChatsRoute
  '/_app/configuration': typeof AppConfigurationRoute
  '/_app/data-sources': typeof AppDataSourcesRoute
  '/_app/prompting': typeof AppPromptingRoute
  '/_app/': typeof AppIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/init-chatbot'
    | '/login'
    | '/chats'
    | '/configuration'
    | '/data-sources'
    | '/prompting'
    | '/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/init-chatbot'
    | '/login'
    | '/chats'
    | '/configuration'
    | '/data-sources'
    | '/prompting'
    | '/'
  id:
    | '__root__'
    | '/_app'
    | '/init-chatbot'
    | '/login'
    | '/_app/chats'
    | '/_app/configuration'
    | '/_app/data-sources'
    | '/_app/prompting'
    | '/_app/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AppRoute: typeof AppRouteWithChildren
  InitChatbotRoute: typeof InitChatbotRoute
  LoginRoute: typeof LoginRoute
}

const rootRouteChildren: RootRouteChildren = {
  AppRoute: AppRouteWithChildren,
  InitChatbotRoute: InitChatbotRoute,
  LoginRoute: LoginRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_app",
        "/init-chatbot",
        "/login"
      ]
    },
    "/_app": {
      "filePath": "_app.tsx",
      "children": [
        "/_app/chats",
        "/_app/configuration",
        "/_app/data-sources",
        "/_app/prompting",
        "/_app/"
      ]
    },
    "/init-chatbot": {
      "filePath": "init-chatbot.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/_app/chats": {
      "filePath": "_app/chats.tsx",
      "parent": "/_app"
    },
    "/_app/configuration": {
      "filePath": "_app/configuration.tsx",
      "parent": "/_app"
    },
    "/_app/data-sources": {
      "filePath": "_app/data-sources.tsx",
      "parent": "/_app"
    },
    "/_app/prompting": {
      "filePath": "_app/prompting.tsx",
      "parent": "/_app"
    },
    "/_app/": {
      "filePath": "_app/index.tsx",
      "parent": "/_app"
    }
  }
}
ROUTE_MANIFEST_END */
